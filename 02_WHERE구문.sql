--WHERE 절
SELECT FIRST_NAME, JOB_ID FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG';
SELECT * FROM EMPLOYEES WHERE FIRST_NAME = 'Steven';
SELECT * FROM EMPLOYEES WHERE SALARY >= 10000;
SELECT * FROM EMPLOYEES WHERE SALARY <> 10000; -- <> 같지 않음
SELECT * FROM EMPLOYEES WHERE HIRE_DATE <= '08/01/01'; -- 날짜도 대소비교가 가능함
SELECT * FROM EMPLOYEES WHERE HIRE_DATE = '01/01/13'; 

-- BETWEEN ~ AND 이상 이하
SELECT * FROM EMPLOYEES WHERE SALARY BETWEEN 10000 AND 12000; -- 급여가 10000 ~ 12000 사이
SELECT * FROM EMPLOYEES WHERE HIRE_DATE BETWEEN '05/01/01' AND '05/12/31'; -- 05년 1월 1일 이상 05년 12월 31일 이하 입사자들

-- IN
SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID IN (50,60,70); -- DEPARTMENT_ID가 50,60,70인것만 뽑아줌
SELECT * FROM EMPLOYEES WHERE JOB_ID IN('ST_CLERK', 'IT_PROG'); -- JOB_ID가 IT_PROG, ST_CLERK 인것만 뽑아줌.

-- LIKE (% - 무엇이든 들어올수 있음, _ - 자리수)
SELECT * FROM EMPLOYEES WHERE HIRE_DATE LIKE '03%'; -- 03년 입사자
SELECT * FROM EMPLOYEES WHERE HIRE_DATE LIKE '%03'; -- 03일 입사자
SELECT * FROM EMPLOYEES WHERE HIRE_DATE LIKE '%03%'; -- 03키워드가 포함된 입사자

SELECT * FROM EMPLOYEES WHERE FIRST_NAME LIKE '_a%'; -- 두번째 글자가 a인 데이터 (_는 글자수를 나타낸다.) EX) __a == 세번째 글자가 a인 데이터

-- IS NULL, IS NOT NULL
SELECT * FROM EMPLOYEES WHERE COMMISSION_PCT = NULL; -- 아무것도 나오지 않는다.
SELECT * FROM EMPLOYEES WHERE COMMISSION_PCT IS NULL; -- COMMISSION_PCT가 NULL인 데이터만 뽑아줌
SELECT * FROM EMPLOYEES WHERE COMMISSION_PCT IS NOT NULL; --COMMISSION_PCT가 NULL이 아닌 데이터만 뽑아줌

-- AND, OR - AND의 우선순위가 OR보다 빠름
SELECT * FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG' AND SALARY >= 5000;
SELECT * FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG' OR SALARY >= 5000;
SELECT * FROM EMPLOYEES WHERE (JOB_ID = 'IT_PROG' OR JOB_ID = 'FI_MGR') AND SALARY >= 5000;

-- NOT 키워드 부정의 의미
SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID NOT IN(50, 60); --DEPARTMENT_ID가 50, 60이 아닌 데이터
SELECT * FROM EMPLOYEES WHERE HIRE_DATE NOT LIKE '03%'; --03년 입사자가 아닌 사람들

-- ORDER BY -SELECT 절의 맨 마지막에 들어감-
SELECT * FROM EMPLOYEES ORDER BY JOB_ID ASC;
SELECT * FROM EMPLOYEES ORDER BY JOB_ID; --자동 오름차순 정렬
SELECT * FROM EMPLOYEES ORDER BY SALARY DESC;

SELECT FIRST_NAME AS 이름, SALARY FROM EMPLOYEES WHERE SALARY >= 5000 ORDER BY 이름; --ORDER BY 절에는 별칭을 넣기가 가능